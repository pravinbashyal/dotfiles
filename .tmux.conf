unbind C-b
# unbind-key -a
set -g prefix C-a
bind C-l send-prefix

set -g mouse on

# enable vim mode in tmux
setw -g mode-keys vi

# force reload of config file with 'C-l r'
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"
# source-file ~/.dotfiles/.tmux_statusline_theme.conf

# color status bar
set -g status-bg white
set -g status-fg white

# highlight current window
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg white


# set color of active pane
set -g pane-border-fg white
set -g status-left-length 10
set -g status-left "#{prefix_highlight}"
set -g status-right ""
set -g status-interval 60

set -g status-justify left
setw -g monitor-activity off
set -g visual-activity off

# dunno what this does it enables support for extend key press
setw -g xterm-keys on

# create splits while keeping current path
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"

# create window keeping current path
bind-key c new-window -c "#{pane_current_path}"

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# make copying vim-like
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe 'reattach-to-user-namespace xclip -selection clipboard'

# Sane Scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

set -g default-terminal "screen-256color"

# automatic rename off on executaion of command
set-option -g allow-rename off
# set -g default-command "reattach-to-user-namespace -l /usr/local/bin/zsh"

# timeout for key sequence
set -s escape-time 0

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

#tmux-resurrect
set -g @plugin 'tmux-plugins/tmux-resurrect'

#tmux shell login
# set -g default-command 'reattach-to-user-namespace $SHELL --login'
set-option -g default-command "reattach-to-user-namespace -l zsh"

# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'


# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run-shell '~/.tmux/plugins/tpm/tpm'
